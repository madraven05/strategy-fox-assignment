/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 shoes.glb -t -o Boots.tsx 
Author: Virtual Museums of Ma≈Çopolska (https://sketchfab.com/WirtualneMuzeaMalopolski)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/shoes-67640862c6694852be3134d9d2a8c73e
Title: Shoes
*/

import * as THREE from "three";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { RigidBody } from "@react-three/rapier";
import ProductLayer from "./ProductLayer";

type GLTFResult = GLTF & {
  nodes: {
    Object_2: THREE.Mesh;
    Object_3: THREE.Mesh;
    Object_4: THREE.Mesh;
  };
  materials: {
    e_1675_RC_02_Material_u1_v1: THREE.MeshStandardMaterial;
  };
  // animations: GLTFAction[];
};

export function Boots(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF("/shoes.glb") as GLTFResult;

  return (
    <ProductLayer name="Boots">
      <group {...props} dispose={null}>
        <group
          position={[0, -14.952, 3.861]}
          rotation={[-Math.PI, Math.PI / 2, 0]}
          scale={0.05}
        >
          <RigidBody type="dynamic" colliders="cuboid">
            <mesh
              geometry={nodes.Object_2.geometry}
              material={materials.e_1675_RC_02_Material_u1_v1}
            />
            <mesh
              geometry={nodes.Object_3.geometry}
              material={materials.e_1675_RC_02_Material_u1_v1}
            />
            <mesh
              geometry={nodes.Object_4.geometry}
              material={materials.e_1675_RC_02_Material_u1_v1}
            />
          </RigidBody>
        </group>
      </group>
    </ProductLayer>
  );
}

useGLTF.preload("/shoes.glb");
